@model IEnumerable<StainSaver.Models.Complain>
@using StainSaver.Models
@using System.Globalization
@{
    ViewData["Title"] = "My Complains";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var zaCulture = new CultureInfo("en-ZA");
    string NormalizePath(string path) => string.IsNullOrWhiteSpace(path) ? path : path.Replace("\\", "/");
}
<div class="container-fluid">
    <div class="d-flex align-items-center justify-content-between px-3 py-3 mb-4" style="background-color:#265828;">
        <h2 class="mb-0 text-white">My Complains</h2>
    </div>
</div>
<div class="container mt-4">
    @if (Model.Any())
    {
        <div class="row">
            @foreach (var complain in Model)
            {
                <div class="col-md-6 mb-4">
                    <div class="card shadow-sm h-100">
                        <div class="card-header text-white d-flex justify-content-between align-items-center" style="background-color:#265828;">
                            <h5 class="mb-0">Complain #@complain.ReferenceNumber</h5>
                            <span class="badge bg-light text-dark">@complain.ComplainType.GetDisplayName()</span>
                        </div>
                        <div class="card-body">
                            <dl class="row">
                                @if(complain.ComplainType == ComplainType.Refund)
                                {
                                @* Bank Name *@
                                @if (complain.Bank.HasValue)
                                {
                                    <dt class="col-sm-5">Bank Name</dt>
                                    <dd class="col-sm-7">@complain.Bank.Value.GetDisplayName()</dd>
                                }
                                }
                                @* Bank Account Type *@
                                @if (complain.BankAccountType.HasValue)
                                {
                                    <dt class="col-sm-5">Bank Account Type</dt>
                                    <dd class="col-sm-7">@complain.BankAccountType?.GetDisplayName()</dd>
                                }
                                @* Bank Account Number *@
                                @if (!string.IsNullOrWhiteSpace(complain.BankAccountNumber))
                                {
                                    <dt class="col-sm-5">Bank Account Number</dt>
                                    <dd class="col-sm-7">@complain.BankAccountNumber</dd>
                                }
                                @* Description *@
                                @if (!string.IsNullOrWhiteSpace(complain.Description))
                                {
                                    <dt class="col-sm-5">Description</dt>
                                    <dd class="col-sm-7">@complain.Description</dd>
                                }
                                @* Refund Items
                                @if (complain.RefundItems != null && complain.RefundItems.Any())
                                {
                                    <dt class="col-sm-5">Refund Items</dt>
                                    <dd class="col-sm-7">
                                        <ul class="list-unstyled mb-0">
                                            @foreach (var refundItem in complain.RefundItems)
                                            {
                                                <li>
                                                    <strong>@refundItem.RefundItemName</strong><br />
                                                    @if (!string.IsNullOrWhiteSpace(refundItem.ImageUrl))
                                                    {
                                                        var refundImagePath = NormalizePath(refundItem.ImageUrl);
                                                        <img src="@Url.Content($"~/{refundImagePath}")" alt="Refund Item Image" class="img-fluid mb-2" style="max-height:150px;" />
                                                    }
                                                </li>
                                            }
                                        </ul>
                                    </dd>
                                } *@
                                @* Proof of Payment (link) *@
                                @if (!string.IsNullOrWhiteSpace(complain.ProofOfPayment))
                                {
                                    var proofPaymentPath = NormalizePath(complain.ProofOfPayment);
                                    <dt class="col-sm-5">Proof of Payment</dt>
                                    <dd class="col-sm-7">
                                        <a href="@Url.Content($"~/{proofPaymentPath}")" target="_blank">View File</a>
                                    </dd>
                                }
                                @* Is Lost *@
                                @if (complain.IsLost)
                                {
                                    <dt class="col-sm-5">Is Lost</dt>
                                    <dd class="col-sm-7">Yes</dd>
                                }
                                @* Is Found *@
                                @if (complain.IsFound)
                                {
                                    <dt class="col-sm-5">Is Found</dt>
                                    <dd class="col-sm-7">Yes</dd>
                                }
                                @* Lost or Found Items
                                @if (complain.LostOrFoundItems != null && complain.LostOrFoundItems.Any())
                                {
                                    <dt class="col-sm-5">Lost or Found Items</dt>
                                    <dd class="col-sm-7">
                                        <ul class="list-unstyled mb-0">
                                            @foreach (var lostFoundItem in complain.LostOrFoundItems)
                                            {
                                                <li>
                                                    <strong>@lostFoundItem.ItemDescription</strong><br />
                                                    @if (!string.IsNullOrWhiteSpace(lostFoundItem.ImageUrl))
                                                    {
                                                        var lostFoundImagePath = NormalizePath(lostFoundItem.ImageUrl);
                                                        <img src="@Url.Content($"~/{lostFoundImagePath}")" alt="Lost or Found Item Image" class="img-fluid mb-2" style="max-height:150px;" />
                                                    }
                                                </li>
                                            }
                                        </ul>
                                    </dd>
                                } *@
                                @* Lost or Found Date *@
                                @if (complain.LostOrFoundDate.HasValue)
                                {
                                    <dt class="col-sm-5">Lost or Found Date</dt>
                                    <dd class="col-sm-7">@complain.LostOrFoundDate.Value.ToString("MMM dd, yyyy")</dd>
                                }
                            </dl>
                        </div>
                        <div class="card-footer bg-white">
                            <a asp-action="Details" asp-route-id="@complain.ComplainId" class="btn btn-outline-success">
                                <i class="fas fa-info-circle"></i> Details
                            </a>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="alert alert-info" role="alert">
            <h4 class="alert-heading">No complaints yet!</h4>
            <p>You haven't submitted any complaints yet. Click the "New Complain" button to file one.</p>
        </div>
    }
</div>
@section Scripts {
    <script src="https://kit.fontawesome.com/your-fontawesome-kit.js" crossorigin="anonymous"></script>
}
